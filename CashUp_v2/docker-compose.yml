version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15
    container_name: cashup_postgres
    environment:
      POSTGRES_DB: cashup
      POSTGRES_USER: cashup
      POSTGRES_PASSWORD: cashup
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - cashup_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: cashup_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - cashup_network

  # 核心服务
  core-service:
    build:
      context: ./core-service
      dockerfile: Dockerfile
    container_name: cashup_core
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://cashup:cashup@postgres:5432/cashup
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./core-service:/app
      - ./configs:/app/configs
    restart: unless-stopped
    networks:
      - cashup_network

  # 交易引擎
  trading-engine:
    build:
      context: ./trading-engine
      dockerfile: Dockerfile
    container_name: cashup_trading
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql+asyncpg://cashup:cashup@postgres:5432/cashup
      - REDIS_URL=redis://redis:6379/0
      - CORE_SERVICE_URL=http://core-service:8001
      - DEBUG=true
    depends_on:
      - postgres
      - redis
      - core-service
    volumes:
      - ./trading-engine:/app
      - ./configs:/app/configs
    restart: unless-stopped
    networks:
      - cashup_network

  # 策略平台
  strategy-platform:
    build:
      context: ./strategy-platform
      dockerfile: Dockerfile
    container_name: cashup_strategy
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql+asyncpg://cashup:cashup@postgres:5432/cashup
      - REDIS_URL=redis://redis:6379/0
      - CORE_SERVICE_URL=http://core-service:8001
      - TRADING_ENGINE_URL=http://trading-engine:8002
      - DEBUG=true
    depends_on:
      - postgres
      - redis
      - core-service
      - trading-engine
    volumes:
      - ./strategy-platform:/app
      - ./strategies:/app/strategies
      - ./configs:/app/configs
    restart: unless-stopped
    networks:
      - cashup_network

  # 通知服务
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: cashup_notification
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql+asyncpg://cashup:cashup@postgres:5432/cashup
      - REDIS_URL=redis://redis:6379/0
      - CORE_SERVICE_URL=http://core-service:8001
      - DEBUG=true
    depends_on:
      - postgres
      - redis
      - core-service
    volumes:
      - ./notification-service:/app
      - ./configs:/app/configs
    restart: unless-stopped
    networks:
      - cashup_network

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cashup_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8001
      - REACT_APP_TRADING_URL=http://localhost:8002
      - REACT_APP_STRATEGY_URL=http://localhost:8003
      - REACT_APP_NOTIFICATION_URL=http://localhost:8004
    depends_on:
      - core-service
      - trading-engine
      - strategy-platform
      - notification-service
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - cashup_network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: cashup_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - core-service
      - trading-engine
      - strategy-platform
      - notification-service
      - frontend
    restart: unless-stopped
    networks:
      - cashup_network

volumes:
  postgres_data:
  redis_data:

networks:
  cashup_network:
    driver: bridge